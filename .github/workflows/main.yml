name: ci

on:
  push:
    branches:
      - terraform

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # -
      #   name: Build and test
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     target: test
      #     load: true
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
  # deploy:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Pull image from docker hub
  #       run: docker pull ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
  #     - name: Delete Old Container
  #       run: docker rm -f crowdFundingContainer
  #     - name: Run docker container
  #       run: docker run --name crowdFundingContainer -p 3000:80 -d ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Terraform Init
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_docker_image_name: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
          TF_VAR_docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Terraform Apply
        run: terraform apply -auto-approve
   
